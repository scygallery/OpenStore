{"version":3,"file":"static/chunks/pages/index-aac9b31fb03db91d9729.js","mappings":"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","sources":["webpack://_N_E/./components/Card.js","webpack://_N_E/./components/Display.js","webpack://_N_E/./components/ItemList.js","webpack://_N_E/./components/TopWaveFooter.js","webpack://_N_E/./pages/index.js","webpack://_N_E/"],"sourcesContent":["import Image from \"next/image\";\n\nexport default function Card({ data, buyNft, key }) {\n  return (\n    <div key={key} className=\"mb-5 col-md-4\">\n      <div className=\"card shadow margin-56\">\n        <Image\n          unoptimized={true}\n          className=\"card-img-top\"\n          src={data.image || \"https://via.placeholder.com/300/09f/fff.png\"}\n          alt=\"Card image cap\"\n          width={200}\n          height={250}\n        />\n        <div className=\"card-body\">\n          <h5 className=\"card-title\" id=\"namepr{{i.id}}\">\n            {data.name}\n          </h5>\n          <h5 className=\"card-title\">\n            {data.price} <b>ETH</b>\n          </h5>\n          <div className=\"row\">\n            <div className=\"col-6\">\n              <button\n                onClick={() => buyNft(data)}\n                id=\"qv{{i.id}}\"\n                className=\"commonbuttons\"\n              >\n                Buy Now\n              </button>\n            </div>\n          </div>\n          <br />\n          <p className=\"card-text\">{data.desc}</p>\n        </div>\n      </div>\n    </div>\n  );\n}\n","import Image from \"next/image\";\n\nexport default function Display() {\n  return (\n    <div className=\"below-navbar-container\">\n      <div className=\"container\">\n        <div className=\"row\">\n          <div className=\"col-md-6 text-center vanish-mobile\">\n            <section id=\"right_below_navbar_svg\">\n              <Image\n                unoptimized={true}\n                src=\"/assets/marketplace.svg\"\n                loading=\"eager\"\n                layout=\"fill\"\n                alt=\"Iphone icon\"\n              />\n            </section>\n          </div>\n          <div className=\"col-md-6\">\n            <div className=\"box-for-names\" id=\"hello-world\">\n              <h1 className=\"title-main\">\n                <b>Open Store</b>\n              </h1>\n              <h4 className=\"mt-2\">\n                An Online Blockchain NFT Marketplace which prevents duplicate\n                assets.\n              </h4>\n              <a href=\"\" target=\"blank\">\n                <button\n                  className=\" flex-row-reverse mt-3 px-5 text-center\"\n                  id=\"commonbuttons\"\n                >\n                  <b>View Demo</b>\n                </button>\n              </a>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n}\n","import React from \"react\";\nimport Web3Modal from \"web3modal\";\nimport { nftaddress, nftmarketaddress, collectionContract } from \"../config\";\nimport Card from \"./Card\";\nimport { useEffect, useState } from \"react\";\nimport { ethers } from \"ethers\";\nimport axios from \"axios\";\n\nconst ItemList = () => {\n  const [items, setItems] = useState([]);\n  const [isLoading, setIsLoading] = useState(true);\n  const [filterCategory, setFilterCategory] = useState(\"All\");\n\n  useEffect(() => {\n    getItems(\"All\");\n    setIsLoading(false);\n  }, []);\n\n  useEffect(() => {\n    getItems(filterCategory);\n  }, [filterCategory]);\n\n  const getItems = async (category) => {\n    const getItemMetaByIdUrl = `https://ethereum-api.rarible.org/v0.1/nft/items/byCollection?collection=${collectionContract}&status=ACTIVE&size=100`;\n    const getItemMetaResult = await fetch(getItemMetaByIdUrl);\n    const itemsJson = await getItemMetaResult.json();\n    let newItems = await Promise.all(\n      itemsJson.items.map(async (d) => {\n        // const tokenUri = await tokenContract.tokenURI(d.tokenId);\n        const price = \"1000 ether\"; //ethers.utils.formatUnits(d.take.valueDecimal.toString(), \"ether\");\n        const meta = d.meta;\n        return {\n          price,\n          tokenId: parseInt(d.tokenId, 10),\n          seller: \"\",\n          owner: d.owners.join(\", \"),\n          image: meta.image.url.PREVIEW,\n          name: meta.name,\n          description: meta.description,\n        };\n      })\n    );\n    setItems(newItems);\n  };\n\n  const buyNft = async (nft) => {\n    const web3Modal = new Web3Modal();\n    const connection = await web3Modal.connect();\n    const prov = new ethers.providers.Web3Provider(connection);\n\n    const signer = prov.getSigner();\n    const contract = new ethers.Contract(\n      nftmarketaddress,\n      NFTMarket.abi,\n      signer\n    );\n\n    const price = ethers.utils.parseUnits(nft.price.toString(), \"ether\");\n\n    const transaction = await contract.createMarketSale(\n      nftaddress,\n      nft.tokenId,\n      {\n        value: price,\n      }\n    );\n    const tx = await transaction.wait();\n    console.log(tx);\n    getItems(\"All\");\n  };\n\n  return (\n    <div\n      style={{\n        display: \"flex\",\n        flexDirection: \"column\",\n        gap: \"20px\",\n      }}\n    >\n      <div style={{ width: \"200px\" }}>\n        <label htmlFor=\"category\">Category:</label>{\" \"}\n        <select\n          name=\"category\"\n          id=\"category\"\n          onChange={(e) => setFilterCategory(e.target.value)}\n        >\n          <option value=\"All\">All</option>\n          <option value=\"Art\">Art</option>\n          <option value=\"Graphics\">Graphics</option>\n          <option value=\"Others\">Others</option>\n        </select>\n      </div>\n      <div\n        style={{\n          display: \"flex\",\n          flexDirection: \"row\",\n          flexWrap: \"wrap\",\n        }}\n      >\n        {items.length > 0 ? (\n          items.map((item, key) => (\n            <Card key={key} buyNft={buyNft} data={item} />\n          ))\n        ) : (\n          <h1 className=\"px-20 py-10 text-3xl\">No items in marketplace</h1>\n        )}\n      </div>\n    </div>\n  );\n};\n\nexport default ItemList;\n","// eslint-disable-next-line @next/next/no-img-element\nimport Image from \"next/image\";\n\nexport default function TopWaveFooter() {\n  return (\n    <div className=\"outer_box_for_waves\">\n      <section id=\"wavesbelownavbar\">\n        {/* // eslint-disable-next-line @next/next/no-img-element */}\n        <img\n          src=\"https://res.cloudinary.com/dnv3ztqf1/image/upload/v1605866350/Images%20for%20UNSCRIPT%20ROOKIE/logos/upperwave_dizfuw.svg\"\n          alt=\"bottom waves\"\n        />\n      </section>\n    </div>\n  );\n}\n","import { ethers } from \"ethers\";\nimport { useEffect, useState } from \"react\";\nimport axios from \"axios\";\nimport Web3Modal from \"web3modal\";\n\nimport { nftaddress, nftmarketaddress } from \"../config\";\nimport Script from \"next/script\";\nimport Head from \"next/head\";\nimport NFT from \"../artifacts/contracts/NFT.sol/NFT.json\";\nimport NFTMarket from \"../artifacts/contracts/NFTMarket.sol/NFTMarket.json\";\nimport Display from \"../components/Display\";\nimport TopWaveFooter from \"../components/TopWaveFooter\";\nimport ItemList from \"../components/ItemList\";\nimport WaveFooter from \"../components/WaveFooter\";\nimport Footer from \"../components/Footer\";\n\nexport default function Home() {\n  const [nfts, setNfts] = useState([]);\n  const [loadingState, setLoadingState] = useState(\"not-loaded\");\n  useEffect(() => {\n    loadNFTs();\n  }, []);\n  async function loadNFTs() {\n    const provider = new ethers.providers.JsonRpcProvider();\n    const tokenContract = new ethers.Contract(nftaddress, NFT.abi, provider);\n    const marketContract = new ethers.Contract(\n      nftmarketaddress,\n      NFTMarket.abi,\n      provider\n    );\n    const data = await marketContract.getMarketItems();\n\n    const items = await Promise.all(\n      data.map(async (i) => {\n        const tokenUri = await tokenContract.tokenURI(i.tokenId);\n        const meta = await axios.get(tokenUri);\n        let price = ethers.utils.formatUnits(i.price.toString(), \"ether\");\n        let item = {\n          price,\n          tokenId: i.tokenId.toNumber(),\n          seller: i.seller,\n          owner: i.owner,\n          image: meta.data.image,\n          name: meta.data.name,\n          description: meta.data.description,\n        };\n        return item;\n      })\n    );\n    setNfts(items);\n    setLoadingState(\"loaded\");\n  }\n  async function buyNft(nft) {\n    const web3Modal = new Web3Modal();\n    const connection = await web3Modal.connect();\n    const provider = new ethers.providers.Web3Provider(connection);\n    const signer = provider.getSigner();\n    const contract = new ethers.Contract(\n      nftmarketaddress,\n      NFTMarket.abi,\n      signer\n    );\n\n    const price = ethers.utils.parseUnits(nft.price.toString(), \"ether\");\n    const transaction = await contract.createMarketSale(\n      nftaddress,\n      nft.tokenId,\n      {\n        value: price,\n      }\n    );\n    await transaction.wait();\n    loadNFTs();\n  }\n  // if (loadingState === \"loaded\" && !nfts.length)\n  //   return <h1 className=\"px-20 py-10 text-3xl\">No items in marketplace</h1>;\n\n  return (\n    <div>\n      <Script src=\"https://kit.fontawesome.com/a076d05399.js\" />\n      <Head>\n        <title>Blockchain Based NFT Application</title>\n        <meta name=\"description\" content=\"Blockchain based NFT application\" />\n      </Head>\n      <Display />\n      <TopWaveFooter />\n      <main\n        style={{ marginTop: \"30px\", marginBottom: \"50px\", minHeight: \"50vh\" }}\n      >\n        <div className=\"container\">\n          <h1\n            className=\"title-main text-center\"\n            style={{ marginBottom: \"30px\", fontWeight: \"bold\" }}\n          >\n            Products\n          </h1>\n          <ItemList />\n        </div>\n      </main>\n\n      <footer>\n        <WaveFooter />\n        <Footer />\n      </footer>\n    </div>\n  );\n}\n","\n    (window.__NEXT_P = window.__NEXT_P || []).push([\n      \"/\",\n      function () {\n        return require(\"private-next-pages/index.js\");\n      }\n    ]);\n  "],"names":["Card","data","buyNft","key","className","unoptimized","src","image","alt","width","height","id","name","price","onClick","desc","Display","loading","layout","href","target","useState","items","setItems","setIsLoading","filterCategory","setFilterCategory","useEffect","getItems","category","getItemMetaByIdUrl","collectionContract","fetch","getItemMetaResult","json","itemsJson","Promise","all","map","d","meta","tokenId","parseInt","seller","owner","owners","join","url","PREVIEW","description","newItems","nft","web3Modal","Web3Modal","connect","connection","prov","ethers","signer","getSigner","contract","nftmarketaddress","NFTMarket","abi","toString","createMarketSale","nftaddress","value","transaction","wait","tx","console","log","style","display","flexDirection","gap","htmlFor","onChange","e","flexWrap","length","item","TopWaveFooter","Home","setNfts","setLoadingState","loadNFTs","provider","tokenContract","NFT","marketContract","getMarketItems","i","tokenURI","tokenUri","axios","toNumber","content","marginTop","marginBottom","minHeight","fontWeight","window","__NEXT_P","push"],"sourceRoot":""}